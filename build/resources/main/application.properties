# ==========================
# CONFIGURAÇÕES DO SERVIDOR
# ==========================
server.port=8080
spring.application.name=ecommerce-kafka

# ==========================
# CONFIGURAÇÕES DO KAFKA
# ==========================
# Porta correta para o ambiente LOCAL (fora do Docker)
spring.kafka.bootstrap-servers=localhost:29092

spring.kafka.consumer.group-id=ecommerce-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Cria tópicos automaticamente se não existirem
spring.kafka.admin.auto-create=true
spring.kafka.admin.fail-fast=false

# ==========================
# TÓPICOS DE CADA EVENTO
# ==========================
app.kafka.topic.order=orders
app.kafka.topic.payment=payments
app.kafka.topic.audit=audits
app.kafka.topic.notification=notifications
app.kafka.topic.analytics=analytics

# ==========================
# ENDPOINTS DE SERVIÇOS EXTERNOS
# ==========================
app.external.notification-api=http://localhost:8081/api/notifications
app.external.payment-gateway=http://localhost:8082/api/payments
app.external.email-api=http://localhost:8083/api/emails
